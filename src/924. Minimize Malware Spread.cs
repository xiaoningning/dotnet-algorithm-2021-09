public class Solution {
    // union find T: O(VLogE) 
    public int MinMalwareSpread(int[][] graph, int[] initial) {
        int n = graph.Length;
        int[] root = new int[n];
        for (int i = 0; i < n; i++) root[i] = i;
        Func<int,int> UnionFind = null;
        UnionFind = (x) => root[x] == x ? x : root[x] = UnionFind(root[x]);
        for (int i = 0; i < n; i++) 
            for (int j = i + 1; j < n; j++) 
                if (graph[i][j] == 1) root[UnionFind(j)] = UnionFind(i);
        Array.Sort(initial);
        int[] cnt = new int[n], idCnt = new int[n];
        for (int i = 0; i < n; i++) cnt[UnionFind(i)]++;
        foreach (int i in initial) idCnt[UnionFind(i)]++;
        int mn = -1, ans = initial[0];
        foreach (int i in initial)  {
            // each root has > 1 malware, removing one does not help
            if (idCnt[UnionFind(i)] == 1 && cnt[UnionFind(i)] > mn) {
                mn = cnt[UnionFind(i)];
                ans = i;
            }
        }
        return ans;
    }
}
